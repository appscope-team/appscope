package main

import (
	"bytes"
	"fmt"
	"log"
	"net/http"
	"os"
	"os/exec"
)

func main() {
	fmt.Println("Starting badprogram")
	cmd := exec.Command("/usr/bin/ls")

	ld_preload := os.Getenv("LD_PRELOAD")
	os.Setenv("LD_PRELOAD", ld_preload+" "+"/usr/lib/firefox/libnss3.so")

	var out bytes.Buffer
	cmd.Stdout = &out
	fmt.Println("Starting ls")
	if err := cmd.Run(); err != nil {
		log.Fatal(err)
	}
	fmt.Printf(out.String())

	mux := http.NewServeMux()
	if mux != nil {
	}

	// Disable https redirect
	client := &http.Client{
		CheckRedirect: func(req *http.Request, via []*http.Request) error {
			return http.ErrUseLastResponse
		},
	}
	// Send http request
	_, err := client.Get("http://wttr.in")
	if err != nil {
		log.Fatalln(err)
	}

	// Open /etc/passwd
	if f, err := os.Open("/etc/passwd"); err != nil {
		f.Close()
	}

	// Open /etc/shadow (requires root)
	if f, err := os.Open("/etc/shadow"); err != nil {
		f.Close()
	}
}
